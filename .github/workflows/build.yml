name: Build Docker images for AequilibraE CI

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-ci-images:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            DOCKERFILE: Dockerfile-windows-ci
            BASE_OS: servercore:ltsc2022

          - os: ubuntu-latest
            DOCKERFILE: Dockerfile-ubuntu-ci
            BASE_OS: ubuntu:24.04

    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Checkout AequilibraE for dependencies
        uses: actions/checkout@v4
        with:
          repository: AequilibraE/aequilibrae
          path: aequilibrae
          fetch-depth: 0

      - name: Get and checkout latest tag (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        working-directory: aequilibrae
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0)
          git checkout --quiet $LATEST_TAG
          echo "Checked out tag: $LATEST_TAG"
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV

      - name: Get and checkout latest tag (Windows)
        if: matrix.os == 'windows-latest'
        working-directory: aequilibrae
        shell: powershell
        run: |
          $LATEST_TAG = git describe --tags --abbrev=0
          git checkout --quiet $LATEST_TAG
          echo "Checked out tag: $LATEST_TAG"
          echo "LATEST_TAG=$LATEST_TAG" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=os=${{ matrix.BASE_OS }}
            type=raw,value=build-date=${{ github.run_date }}
            type=schedule
            type=sha
            type=ref

      - name: Build and push Docker images
        run: |
          docker build -f ${{ matrix.DOCKERFILE }} -t "${{ steps.meta.outputs.tags }}" --label "${{ steps.meta.outputs.labels }}" .
          docker push "${{ steps.meta.outputs.tags }}"
