# escape=`

FROM mcr.microsoft.com/windows/servercore:ltsc2022

SHELL ["cmd", "/S", "/C"]

# Copy our Install script.
COPY Install.cmd C:\TEMP\

# Download collect.exe in case of an install failure.
ADD https://aka.ms/vscollect.exe C:\TEMP\collect.exe

# Use the latest release channel. For more control, specify the location of an internal layout.
ARG CHANNEL_URL=https://aka.ms/vs/17/release/channel
ADD ${CHANNEL_URL} C:\TEMP\VisualStudio.chman

RUN `
    # Download the Build Tools bootstrapper.
    curl -SL --output vs_buildtools.exe https://aka.ms/vs/17/release/vs_buildtools.exe `
    `
    && (call C:\TEMP\Install.cmd vs_buildtools.exe --quiet --wait --norestart --nocache install `
        --installPath "%ProgramFiles(x86)%\Microsoft Visual Studio\2022\BuildTools" `
        --channelUri C:\TEMP\VisualStudio.chman `
        --installChannelUri C:\TEMP\VisualStudio.chman `
        --includeRecommended `
        --add Microsoft.VisualStudio.Workload.VCTools) `
    `
    # Cleanup
    && del /q vs_buildtools.exe

# Set PowerShell as the default shell
SHELL ["powershell", "-Command"]

# Install 7-zip to extract SpatiaLite files
RUN Invoke-WebRequest -Uri https://www.7-zip.org/a/7z2201-x64.exe -OutFile 7z-installer.exe; `
    Start-Process -FilePath .\7z-installer.exe -ArgumentList '/S' -Wait; `
    Remove-Item -Path .\7z-installer.exe

# Download and extract SpatiaLite
RUN Invoke-WebRequest -Uri http://www.gaia-gis.it/gaia-sins/windows-bin-amd64/mod_spatialite-5.1.0-win-amd64.7z -OutFile mod_spatialite.7z; `
    & 'C:\Program Files\7-Zip\7z.exe' x mod_spatialite.7z -oC:\spatialite; `
    Remove-Item -Path .\mod_spatialite.7z;

RUN setx /M PATH $($Env:PATH + ';C:\spatialite')

# Install UV to manage Python versions and venvs
ADD https://astral.sh/uv/0.6.5/install.ps1 C:\TEMP\uv-install.ps1
RUN powershell -ExecutionPolicy Bypass -File C:\TEMP\uv-install.ps1

# Create venvs (and install python versions), use venv-py310\Scripts\activate to activate
RUN uv venv --python 3.9  venv-py39; `
    uv venv --python 3.10 venv-py310; `
    uv venv --python 3.11 venv-py311; `
    uv venv --python 3.12 venv-py312

COPY aequilibrae aequilibrae
# Install AequilibraE for its dependencies, then remove it
RUN venv-py39\Scripts\activate;  uv pip install -r aequilibrae/requirements.txt -r aequilibrae/tests/requirements_tests.txt -r aequilibrae/docs/requirements-docs.txt; deactivate; `
    venv-py310\Scripts\activate; uv pip install -r aequilibrae/requirements.txt -r aequilibrae/tests/requirements_tests.txt -r aequilibrae/docs/requirements-docs.txt; deactivate; `
    venv-py311\Scripts\activate; uv pip install -r aequilibrae/requirements.txt -r aequilibrae/tests/requirements_tests.txt -r aequilibrae/docs/requirements-docs.txt; deactivate; `
    venv-py312\Scripts\activate; uv pip install -r aequilibrae/requirements.txt -r aequilibrae/tests/requirements_tests.txt -r aequilibrae/docs/requirements-docs.txt; deactivate


RUN Remove-Item -Path C:\aequilibrae -Recurse -Force
RUN Remove-Item -Path C:\TEMP -Recurse -Force

ENTRYPOINT ["C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\Common7\\Tools\\VsDevCmd.bat", "&&", "powershell.exe", "-NoLogo", "-ExecutionPolicy", "Bypass"]